version: "3.9"

services:
    ftp:
        image: fauria/vsftpd
        container_name: ftp_server
        ports:
            - "21:21"
            - "21000-21010:21000-21010"
        environment:
            - FTP_USER=${FTP_USER}
            - FTP_PASS=${FTP_PASS}
            - PASV_ADDRESS=${PASV_ADDRESS}
            - PASV_MIN_PORT=${PASV_MIN_PORT}
            - PASV_MAX_PORT=${PASV_MAX_PORT}
        volumes:
            - ./logs:/home/vsftpd/${FTP_USER}
        restart: unless-stopped

    db:
        image: postgres:15
        container_name: postgres_db
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "${POSTGRES_PORT}:5432"
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

    mysql_db:
        image: mysql:8.0
        container_name: mysql_fenetre
        environment:
            MYSQL_DATABASE: db_commandes
            MYSQL_USER: fenetre_user
            MYSQL_PASSWORD: password
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        volumes:
            - mysql_data:/var/lib/mysql
            - ./commandes/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "3306:3306"
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "fenetre_user", "-ppassword"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s

    sync_service:
        build: ./script
        container_name: sync_service
        depends_on:
            mysql_db:
                condition: service_healthy
            db:
                condition: service_healthy
        environment:
            # Configuration PostgreSQL
            - POSTGRES_HOST=db
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            # Configuration MySQL
            - MYSQL_HOST=mysql_db
            - MYSQL_DB=db_commandes
            - MYSQL_USER=fenetre_user
            - MYSQL_PASSWORD=password
            # Configuration FTP
            - FTP_HOST=ftp
            - FTP_USER=${FTP_USER}
            - FTP_PASS=${FTP_PASS}
            # Configuration de la synchronisation
            - SYNC_INTERVAL=${SYNC_INTERVAL:-3600}  # Intervalle en secondes (défaut: 1 heure)
            - DELETE_AFTER_SYNC=${DELETE_AFTER_SYNC:-false}  # Supprimer les fichiers après traitement
        volumes:
            - ./script:/app
            - ./logs:/app/logs
        restart: "no"
        command: >
            sh -c "sleep 60 && python mysql_sync_service.py"

    api:
        build: ./api
        container_name: fastapi_server
        depends_on:
            db:
                condition: service_healthy
        environment:
            - POSTGRES_HOST=${POSTGRES_HOST}
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        ports:
            - "8000:8000"
        volumes:
            - ./api:/app
        restart: unless-stopped

volumes:
    pgdata:
    mysql_data: