version: "3.8"

services:
    db:
        image: postgres:15
        container_name: chatbot_sav_db
        environment:
            POSTGRES_DB: chatbot_sav
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_HOST_AUTH_METHOD: trust
        volumes:
            - chatbot_postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d chatbot_sav"]
            interval: 10s
            timeout: 10s
            retries: 10
            start_period: 30s
        networks:
            - chatbot_network

    web:
        build: ./fastapi
        container_name: chatbot_sav_web
        volumes:
            - ./fastapi:/app
            - ./fastapi/uploads:/app/uploads
        ports:
            - "8001:8000"
        environment:
            - DATABASE_URL=postgresql://postgres:password@db:5432/chatbot_sav
            - SECRET_KEY=your-super-secret-key-change-in-production
            - OPENAI_API_KEY=${OPENAI_API_KEY}
            - OPENAI_MODEL=${OPENAI_MODEL}
            - ADMIN_USERNAME=${ADMIN_USERNAME}
            - ADMIN_EMAIL=${ADMIN_EMAIL}
            - ADMIN_PASSWORD=${ADMIN_PASSWORD}
            - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
        depends_on:
            db:
                condition: service_healthy
        networks:
            - chatbot_network

    prometheus:
        image: prom/prometheus:latest
        container_name: chatbot_sav_prometheus
        ports:
            - "9090:9090"
        volumes:
            - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml
            - prometheus_data:/prometheus
        command:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--storage.tsdb.retention.time=200h"
            - "--web.enable-lifecycle"
        networks:
            - chatbot_network

    postgres-exporter:
        image: prometheuscommunity/postgres-exporter:latest
        container_name: chatbot_sav_postgres_exporter
        environment:
            - DATA_SOURCE_NAME=postgresql://postgres:password@db:5432/chatbot_sav?sslmode=disable
        ports:
            - "9187:9187"
        depends_on:
            db:
                condition: service_healthy
        networks:
            - chatbot_network

    grafana:
        image: grafana/grafana:latest
        container_name: chatbot_sav_grafana
        ports:
            - "3000:3000"
        environment:
            - GF_SECURITY_ADMIN_USER=admin
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_USERS_ALLOW_SIGN_UP=false
            - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
        volumes:
            - grafana_data:/var/lib/grafana
            - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
            - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
            - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
            - ./monitoring/grafana/provisioning/alerting:/etc/grafana/provisioning/alerting
        networks:
            - chatbot_network

    node-exporter:
        image: prom/node-exporter:latest
        container_name: chatbot_sav_node_exporter
        ports:
            - "9100:9100"
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - "--path.procfs=/host/proc"
            - "--path.rootfs=/rootfs"
            - "--path.sysfs=/host/sys"
            - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
        networks:
            - chatbot_network

volumes:
    chatbot_postgres_data:
    prometheus_data:
    grafana_data:

networks:
    chatbot_network:
        driver: bridge
